#!/usr/bin/env python3

import rospy
from std_msgs.msg import Int16
import tkinter as tk

class SensorDisplay:
	def __init__(self, root):
    	self.root = root
    	self.root.geometry("300x300")
    	self.root.title("IR Sensor Value Display")
   	 
    	self.label = tk.Label(self.root, text="Value: ", font=("Helvetica", 24))
    	self.label.pack(pady=50)
   	 
    	# Initialize the ROS node
    	rospy.init_node('GUI', anonymous=True)
   	 
    	# Subscribe to the ROS topic
    	rospy.Subscriber('digitalRead_D2', Int16, self.callback)
   	 
    	# Start the Tkinter main loop
    	self.update_label()

	def callback(self, data):
    	# Update the label with the sensor value
    	self.sensor_value = data.data

	def update_label(self):
    	# Continuously update the label with the latest sensor value
    	if hasattr(self, 'sensor_value'):
        	self.label.config(text=f"Value: {self.sensor_value}")
   	 
    	# Call this method again after 100ms
    	self.root.after(100, self.update_label)

if __name__ == '__main__':
	# Create the main window
	root = tk.Tk()
    
	# Create the SensorDisplay instance
	display = SensorDisplay(root)
    
	# Run the Tkinter main loop
	root.mainloop()
